<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2784c8646152c8cda81a01a9b8b2f3fae35b297b




# 그룹 image 업로드 
# postman 으로 업로드 

POST http://localhost:3000/image/upload

photo=@"C:/Users/user/Desktop/sample.jpeg"




###
POST http://localhost:3000/groups
Content-Type: application/json

{
  "name": "태그 테스트 그룹",
  "description": "테스트 그룹입니다.",
  "photoUrl": "string",
  "goalRep": 10,
  "discordWebhookUrl": "string",
  "discordInviteUrl": "string",
  "ownerNickname": "abc",
  "ownerPassword": "123123",
  "tags" : ["as", "운동", "여가", "안녕"]
}

###
# 그룹목록조회 
GET http://localhost:3000/groups
Content-Type: application/json

###
#  그룹상세조회 
GET http://localhost:3000/groups/21

###
# 그룹좋아요늘리기 
POST http://localhost:3000/groups/21/likes

###
# 그룹 좋아요 취소 
DELETE  http://localhost:3000/groups/21/likes/remove



###
#그룹 수정 
PATCH  http://localhost:3000/groups/20
Content-Type: application/json

{
  "name": "a수정하자자sd",
  "description": "stㅇㄴㄴring",
  "photoUrl": "strㄴㅇㄴㅇㅇing",
  "goalRep": 0,
  "discordWebhookUrl": "string",
  "discordInviteUrl": "striㄴㅇㄴㄴng",
  "tags" : ["string"],
  "ownerPassword" : "123123"
}


###
DELETE  http://localhost:3000/groups/remove/11
Content-Type: application/json

{
  "ownerPassword" : "123123"
}



#태그 목록 조회 
###
GET http://localhost:3000/tags/
Content-Type: application/json

###
#태그 상세 조회 
GET http://localhost:3000/tags/2
Content-Type: application/json



### Record 생성 (POST)
POST http://localhost:3000/groups/20/participants/29/records
Content-Type: application/json

{
  "exerciseType": "수영" , 
  "description": "추가 ",
  "time": 3500,
  "distance": 12500,
  "photos": []
}

### 1) 그룹 내 모든 Record 조회 (GET)
GET http://localhost:3000/groups/2/records?page=1&limit=10

### 2) 특정 참여자의 Record 조회 (GET)
GET http://localhost:3000/groups/2/participants/1/records

### 3) 단일 Record 조회 (GET)
GET http://localhost:3000/groups/1/participants/1/records/1

### 4) Record 삭제 (DELETE)
DELETE http://localhost:3000/groups/1/participants/1/records/1


#참가자 그룹참여 
###
POST http://localhost:3000/groups/20/participants
Content-Type: application/json

{
  "nickname" : "참여자수 ",
  "password" : "123123"
}

#랭크 조회 
###
GET http://localhost:3000/groups/1/rank


###
# const { calculateRank } = require('./rankService');

# test('점수 높은 순으로 정렬 + 랭크 부여 확인', () => {
#   const input = [
#     { consumer_name: 'A', score: 10 },
#     { consumer_name: 'B', score: 30 },
#     { consumer_name: 'C', score: 20 },
#   ];

#   const result = calculateRank(input);

#   expect(result); ([
#     { rank: 1, consumer_name: 'B', score: 30 },
#     { rank: 2, consumer_name: 'C', score: 20 },
#     { rank: 3, consumer_name: 'A', score: 10 },
#   ]);
# });

### Record 생성 (POST)
POST http://localhost:3000/groups/1/participants/2/records
Content-Type: application/json

{
  "exerciseType": "running",
  "description": "추가 ",
  "time": 3500,
  "distance": 12500,
  "photos": ["https://example.com/pic.jpg"]
}

### 1) 그룹 내 모든 Record 조회 (GET)
GET http://localhost:3000/groups/2/records?page=1&limit=10

### 2) 특정 참여자의 Record 조회 (GET)
GET http://localhost:3000/groups/2/participants/1/records

### 3) 단일 Record 조회 (GET)
GET http://localhost:3000/groups/1/participants/1/records/1

### 4) Record 삭제 (DELETE)
DELETE http://localhost:3000/groups/1/participants/1/records/1
<<<<<<< HEAD
>>>>>>> 249af842d2a50ecbd33e2651d7ee23f54c65fbaf
=======








###
# const { calculateRank } = require('./rankService');

# test('점수 높은 순으로 정렬 + 랭크 부여 확인', () => {
#   const input = [
#     { consumer_name: 'A', score: 10 },
#     { consumer_name: 'B', score: 30 },
#     { consumer_name: 'C', score: 20 },
#   ];

#   const result = calculateRank(input);

#   expect(result); ([
#     { rank: 1, consumer_name: 'B', score: 30 },
#     { rank: 2, consumer_name: 'C', score: 20 },
#     { rank: 3, consumer_name: 'A', score: 10 },
#   ]);
# });
>>>>>>> 2784c8646152c8cda81a01a9b8b2f3fae35b297b
